-- PIVOT(행을 열(컬럼)으로) : 화면에 뿌려주기 위해, 가독성을 높이기 위해
SELECT 
    *
     FROM ( --STEP1. 조회하고싶은 애를 서브쿼리로 감싸주고
        SELECT  *
        FROM DT_RESULT_FINAL2
      )
PIVOT(  --STEP2. PIVOT으로 감싸주기
    SUM(SALES)
    FOR MEASURE IN 
   ('REAL-QTY' AS REAL_QTY,'PREDICTION-QTY' AS PREDICTION_QTY)
);

SELECT * FROM DT_RESULT_FINAL2;

SELECT * FROM KOPO_CHANNEL_SEASONALITY_NEW;

-- 지역/상품별로 평균판매량을 소수점없이 나타내고,
-- 주차를 W01~W53로 PIVOT형태로 표현
SELECT * 
FROM(
    SELECT REGIONID,
    PRODUCT,
    SUBSTR(YEARWEEK,5) AS WEEK,
    ROUND(AVG(QTY), 2) AS QTY
   FROM
   KOPO_CHANNEL_SEASONALITY_NEW
   GROUP BY REGIONID, PRODUCT, SUBSTR(YEARWEEK, 5)
) PIVOT (
    SUM(QTY) --SUM한 QTY를
    FOR WEEK IN ('01' AS "W01", '02' AS "W02", '04' AS "W04") --여기서 설정한 컬럼에다 담아줄거야
   )
ORDER BY REGIONID, PRODUCT;

 --UNPIVOT
 --MEASURE라는 새 컬럼에  기존의 열에 있던 REAL_QTY, PREDICTION_QTY를 넣는다
 
 WITH T AS( 
    SELECT * FROM DT_RESULT_FINAL3
)
SELECT * FROM T
UNPIVOT(QTY FOR MEASURE IN(REAL_QTY, PREDICTION_QTY));

SELECT * FROM DT_RESULT_FINAL3;


-- 조회 복습
SELECT * FROM
KOPO_PROMOTION
WHERE 1=1
AND REGIONID LIKE '%A01%';

-- INNERJOIN 예제
SELECT JOINA.*, JOINB.*
 FROM(
    SELECT B.REGIONID, AVG(B.PRO_PROMOTION)
    FROM(
        SELECT  A.*,
            CASE WHEN A.MAP_PRICE=0 THEN 0
            ELSE A.IR/A.MAP_PRICE END AS PRO_PROMOTION
        FROM
            KOPO_PROMOTION A
        WHERE 1=1
        AND REGIONID LIKE '%A01%'
        ORDER BY REGIONID, ITEM
    ) B
    GROUP BY B.REGIONID
    ) JOINA
INNER JOIN KOPO_REGION_MST JOINB
ON JOINA.REGIONID = JOINB.REGIONID;

SELECT * FROM KOPO_PROMOTION;

SELECT * FROM KOPO_REGION_MST;




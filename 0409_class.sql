--부모 테이블 생성
CREATE TABLE KOPO_EVENT_INFO_FOREIGN2(
EVENTID VARCHAR2(20),
EVENTPERIOD VARCHAR2(20),
PROMOTION_RATIO NUMBER,
CONSTRAINT PK_KOPO_EVENT_INFO_FOREIGN2 PRIMARY KEY(EVENTID));

SELECT * FROM KOPO_EVENT_INFO_FOREIGN2;

--자식 테이블 생성
CREATE TABLE KOPO_PRODUCT_VOLUME_FOREIG(
REGIONID VARCHAR2(20),
PRODUCTGROUP VARCHAR2(20),
YEARWEEK VARCHAR2(8),
VOLUME NUMBER NOT NULL,
EVENTID VARCHAR2(20),
--기본키 생성
CONSTRAINT PK_KOPO_PRODUCT_VOLUME_FOREIG 
PRIMARY KEY(REGIONID, PRODUCTGROUP, YEARWEEK),
--참조할 부모키 생성
CONSTRAINT FK_KOPO_PRODUCT_VOLUME_FOREIGN
FOREIGN KEY(EVENTID) REFERENCES KOPO_EVENT_INFO_FOREIGN2(EVENTID));

SELECT * FROM KOPO_PRODUCT_VOLUME_FOREIG;

--자식 테이블에 데이터 추가 : error 생성 => 부모 테이블에 데이터가 없기때문!
INSERT INTO KOPO_PRODUCT_VOLUME_FOREIG
    -- 아래처럼 컬럼명을 추가해주면 원하는 컬럼에 대한 정보만 불러 올 수 있음
    --(REGIONID,PRODUCTGROUP,VOLUME)
    VALUES('A01','ST001','201501',200,'EV0001');
    
--부모 테이블에 데이터 추가 : 위에서 난 error를 처리해주기 위해!
INSERT INTO KOPO_EVENT_INFO_FOREIGN2 VALUES('EV0001','5','0.3');

--EV0001 데이터 삭제 => 삭제되지 않음 : 자식테이블에서 참조하고 있기 때문!
DELETE FROM KOPO_EVENT_INFO_FOREIGN2 WHERE EVENTID = 'EV0001';
--* ON DELETE CASCADE 사용 : 자식테이블에서 참조할 부모키 생성코드 작성 시
--* ON DELETE CASCADE를 사용해주면 참조 무결성 제약조건에서 자유로워짐
--* ON DELETE SET NULL 사용 : 삭제된 데이터 값을 NULL로 처리

